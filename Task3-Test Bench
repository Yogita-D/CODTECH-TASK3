module tb_pipelined_processor;

    reg clk, reset;

    pipelined_processor uut(.clk(clk), .reset(reset));

    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 10 time units clock period
    end

    initial begin
        reset = 1;
        #10;
        reset = 0;

        // Initialize instruction memory manually
        // Format: [Opcode][Rs][Rt][Rd]
        // ADD R0 = R1 + R2 -> 00 01 10 00 = 8'b00011000 = 0x18
        // SUB R3 = R1 - R2 -> 01 01 10 11 = 8'b01011011 = 0x5B
        // LOAD R2 = M[R1]  -> 10 01 00 10 = 8'b10010010 = 0x92

        uut.instr_mem[0] = 8'h18; // ADD
        uut.instr_mem[1] = 8'h5B; // SUB
        uut.instr_mem[2] = 8'h92; // LOAD

        // Initialize registers
        uut.reg_file[1] = 8'd10;
        uut.reg_file[2] = 8'd5;
        uut.memory[10] = 8'd99;  // for LOAD test

        #100 $finish;
    end

endmodule
